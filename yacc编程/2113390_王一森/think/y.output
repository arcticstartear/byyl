Grammar

    0 $accept: lines $end

    1 lines: lines expr '\n'
    2      | lines '\n'
    3      | /* empty */

    4 expr: expr ADD expr
    5     | expr MINUS expr
    6     | expr MUL expr
    7     | expr DIV expr
    8     | MINUS expr
    9     | LEFT expr RIGHT
   10     | ID
   11     | ID EQUAL expr
   12     | NUMBER


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1 2
error (256)
ADD (258) 4
MINUS (259) 5 8
MUL (260) 6
DIV (261) 7
LEFT (262) 9
RIGHT (263) 9
EQUAL (264) 11
NUMBER (265) 12
ID (266) 10 11
UMINUS (267)


Nonterminals, with rules where they appear

$accept (14)
    on left: 0
lines (15)
    on left: 1 2 3, on right: 0 1 2
expr (16)
    on left: 4 5 6 7 8 9 10 11 12, on right: 1 4 5 6 7 8 9 11


state 0

    0 $accept: . lines $end

    $default  reduce using rule 3 (lines)

    lines  go to state 1


state 1

    0 $accept: lines . $end
    1 lines: lines . expr '\n'
    2      | lines . '\n'

    $end    shift, and go to state 2
    MINUS   shift, and go to state 3
    LEFT    shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6
    '\n'    shift, and go to state 7

    expr  go to state 8


state 2

    0 $accept: lines $end .

    $default  accept


state 3

    8 expr: MINUS . expr

    MINUS   shift, and go to state 3
    LEFT    shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6

    expr  go to state 9


state 4

    9 expr: LEFT . expr RIGHT

    MINUS   shift, and go to state 3
    LEFT    shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6

    expr  go to state 10


state 5

   12 expr: NUMBER .

    $default  reduce using rule 12 (expr)


state 6

   10 expr: ID .
   11     | ID . EQUAL expr

    EQUAL  shift, and go to state 11

    $default  reduce using rule 10 (expr)


state 7

    2 lines: lines '\n' .

    $default  reduce using rule 2 (lines)


state 8

    1 lines: lines expr . '\n'
    4 expr: expr . ADD expr
    5     | expr . MINUS expr
    6     | expr . MUL expr
    7     | expr . DIV expr

    ADD    shift, and go to state 12
    MINUS  shift, and go to state 13
    MUL    shift, and go to state 14
    DIV    shift, and go to state 15
    '\n'   shift, and go to state 16


state 9

    4 expr: expr . ADD expr
    5     | expr . MINUS expr
    6     | expr . MUL expr
    7     | expr . DIV expr
    8     | MINUS expr .

    $default  reduce using rule 8 (expr)


state 10

    4 expr: expr . ADD expr
    5     | expr . MINUS expr
    6     | expr . MUL expr
    7     | expr . DIV expr
    9     | LEFT expr . RIGHT

    ADD    shift, and go to state 12
    MINUS  shift, and go to state 13
    MUL    shift, and go to state 14
    DIV    shift, and go to state 15
    RIGHT  shift, and go to state 17


state 11

   11 expr: ID EQUAL . expr

    MINUS   shift, and go to state 3
    LEFT    shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6

    expr  go to state 18


state 12

    4 expr: expr ADD . expr

    MINUS   shift, and go to state 3
    LEFT    shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6

    expr  go to state 19


state 13

    5 expr: expr MINUS . expr

    MINUS   shift, and go to state 3
    LEFT    shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6

    expr  go to state 20


state 14

    6 expr: expr MUL . expr

    MINUS   shift, and go to state 3
    LEFT    shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6

    expr  go to state 21


state 15

    7 expr: expr DIV . expr

    MINUS   shift, and go to state 3
    LEFT    shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6

    expr  go to state 22


state 16

    1 lines: lines expr '\n' .

    $default  reduce using rule 1 (lines)


state 17

    9 expr: LEFT expr RIGHT .

    $default  reduce using rule 9 (expr)


state 18

    4 expr: expr . ADD expr
    5     | expr . MINUS expr
    6     | expr . MUL expr
    7     | expr . DIV expr
   11     | ID EQUAL expr .

    ADD    shift, and go to state 12
    MINUS  shift, and go to state 13
    MUL    shift, and go to state 14
    DIV    shift, and go to state 15

    $default  reduce using rule 11 (expr)


state 19

    4 expr: expr . ADD expr
    4     | expr ADD expr .
    5     | expr . MINUS expr
    6     | expr . MUL expr
    7     | expr . DIV expr

    MUL  shift, and go to state 14
    DIV  shift, and go to state 15

    $default  reduce using rule 4 (expr)


state 20

    4 expr: expr . ADD expr
    5     | expr . MINUS expr
    5     | expr MINUS expr .
    6     | expr . MUL expr
    7     | expr . DIV expr

    MUL  shift, and go to state 14
    DIV  shift, and go to state 15

    $default  reduce using rule 5 (expr)


state 21

    4 expr: expr . ADD expr
    5     | expr . MINUS expr
    6     | expr . MUL expr
    6     | expr MUL expr .
    7     | expr . DIV expr

    $default  reduce using rule 6 (expr)


state 22

    4 expr: expr . ADD expr
    5     | expr . MINUS expr
    6     | expr . MUL expr
    7     | expr . DIV expr
    7     | expr DIV expr .

    $default  reduce using rule 7 (expr)
